// <auto-generated />
using System;
using ASFA.Repositories.Connections;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ASFA.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250506133120_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ASFA.Models.Anexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("PessoaIdosaId")
                        .HasColumnType("integer");

                    b.Property<int>("TipoAnexo")
                        .HasColumnType("integer");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("PessoaIdosaId");

                    b.ToTable("Anexos", (string)null);
                });

            modelBuilder.Entity("ASFA.Models.ComposicaoFamiliar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Alfabetizado")
                        .HasColumnType("boolean");

                    b.Property<string>("Aposentado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("AtividadeNaComunidadeSagradaFamilia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Beneficio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CursosTecnicoFormacaoProfissional")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Deficiencia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("EstudaAtualmente")
                        .HasColumnType("boolean");

                    b.Property<bool>("FazAlgumTratamento")
                        .HasColumnType("boolean");

                    b.Property<string>("FazAlgumTratamentoOnde")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NivelSerieAtualConcluido")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PessoaId")
                        .HasColumnType("integer");

                    b.Property<string>("ProblemaDeSaude")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Renda")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("SituacaoOcupacional")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TrabalhoPastoralOuSocial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TrabalhoVoluntario")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("TrabalhoVoluntarioOnde")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("UsaMedicamentoControlado")
                        .HasColumnType("boolean");

                    b.Property<bool>("UsaRecursosUbsLocal")
                        .HasColumnType("boolean");

                    b.HasKey("Id");

                    b.HasIndex("PessoaId")
                        .IsUnique();

                    b.ToTable("ComposicoesFamiliares", (string)null);
                });

            modelBuilder.Entity("ASFA.Models.Endereco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cep")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Moradia")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PessoaIdosaId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("PessoaIdosaId")
                        .IsUnique();

                    b.ToTable("Enderecos", (string)null);
                });

            modelBuilder.Entity("ASFA.Models.Pessoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<int>("ComposicaoFamiliarId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("DataCadastro")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Pessoas", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("ASFA.Models.Dependente", b =>
                {
                    b.HasBaseType("ASFA.Models.Pessoa");

                    b.Property<string>("Ceinf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CeinfBairro")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Parentesco")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("PessoaIdosaId")
                        .HasColumnType("integer");

                    b.Property<string>("ProgramaSaudePastoralCrianca")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProgramaSaudePastoralCriancaLocal")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasIndex("PessoaIdosaId");

                    b.ToTable("Dependentes", (string)null);
                });

            modelBuilder.Entity("ASFA.Models.PessoaIdosa", b =>
                {
                    b.HasBaseType("ASFA.Models.Pessoa");

                    b.Property<int>("AnexoId")
                        .HasColumnType("integer");

                    b.Property<bool>("AposentadoConsegueSeManterComSuaRenda")
                        .HasColumnType("boolean");

                    b.Property<string>("ComoComplementa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("EnderecoId")
                        .HasColumnType("integer");

                    b.Property<string>("EstadoCivil")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("HistoricoFamiliarSocial")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Naturalidade")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Observacao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("OrgaoEmissor")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ProntuarioSaude")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Religiao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Rg")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("text");

                    b.ToTable("PessoasIdosas", (string)null);
                });

            modelBuilder.Entity("ASFA.Models.Anexo", b =>
                {
                    b.HasOne("ASFA.Models.PessoaIdosa", "PessoaIdosa")
                        .WithMany("Anexos")
                        .HasForeignKey("PessoaIdosaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PessoaIdosa");
                });

            modelBuilder.Entity("ASFA.Models.ComposicaoFamiliar", b =>
                {
                    b.HasOne("ASFA.Models.Pessoa", "Pessoa")
                        .WithOne("ComposicaoFamiliar")
                        .HasForeignKey("ASFA.Models.ComposicaoFamiliar", "PessoaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("ASFA.Models.Endereco", b =>
                {
                    b.HasOne("ASFA.Models.PessoaIdosa", "PessoaIdosa")
                        .WithOne("Endereco")
                        .HasForeignKey("ASFA.Models.Endereco", "PessoaIdosaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PessoaIdosa");
                });

            modelBuilder.Entity("ASFA.Models.Dependente", b =>
                {
                    b.HasOne("ASFA.Models.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("ASFA.Models.Dependente", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ASFA.Models.PessoaIdosa", "PessoaIdosa")
                        .WithMany("Dependentes")
                        .HasForeignKey("PessoaIdosaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PessoaIdosa");
                });

            modelBuilder.Entity("ASFA.Models.PessoaIdosa", b =>
                {
                    b.HasOne("ASFA.Models.Pessoa", null)
                        .WithOne()
                        .HasForeignKey("ASFA.Models.PessoaIdosa", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ASFA.Models.Pessoa", b =>
                {
                    b.Navigation("ComposicaoFamiliar")
                        .IsRequired();
                });

            modelBuilder.Entity("ASFA.Models.PessoaIdosa", b =>
                {
                    b.Navigation("Anexos");

                    b.Navigation("Dependentes");

                    b.Navigation("Endereco")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
